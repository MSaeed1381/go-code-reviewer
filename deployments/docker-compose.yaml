version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      CLUSTER_ID: 2JMG0UxkQ3WNdf3W1gWJ4A
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - ../data/kafka-data:/var/lib/kafka/data
  chroma_db:
    image: chromadb/chroma
    container_name: chroma_db
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - ../data/chroma-data:/var/lib/chroma
  prometheus:
    image: docker.io/prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - ../prometheus:/etc/prometheus/:ro
      - ../data/prometheus-data:/prometheus
    restart: unless-stopped
  grafana:
      image: docker.io/grafana/grafana
      container_name: grafana
      ports:
        - "3000:3000"
      volumes:
        - ../data/grafana-data:/var/lib/grafana
      restart: unless-stopped
      depends_on:
        - prometheus

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  chroma-data:
    driver: local
  kafka-data:
    driver: local
