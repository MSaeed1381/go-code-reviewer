name: Service Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      service_name: ${{ steps.get_service.outputs.service_name }}
      should_run: ${{ steps.get_service.outputs.service_name != '' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract service name from commit message
        id: get_service
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          
          SERVICE_NAME=$(echo "$COMMIT_MSG" | grep -oP '^[a-zA-Z]+\(\K[^\)]+' || true)
          
          echo "Extracted service name: '${SERVICE_NAME}'"
          echo "service_name=${SERVICE_NAME}" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    if: needs.prepare.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build the specific service
        run: |
          SERVICE_NAME="${{ needs.prepare.outputs.service_name }}"
          echo "Service to build: ${SERVICE_NAME}"
          
          SERVICE_DIR="services/${SERVICE_NAME}"
          
          if [ -d "$SERVICE_DIR" ]; then
            echo "Directory '${SERVICE_DIR}' found. Starting build..."
            cd $SERVICE_DIR
            go build .
            echo "Build completed successfully."
          else
            echo "Error: Directory '${SERVICE_DIR}' not found!"
            exit 1
          fi

  test:
    needs: prepare
    if: needs.prepare.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run tests for the specific service
        run: |
          SERVICE_NAME="${{ needs.prepare.outputs.service_name }}"
          echo "Service to test: ${SERVICE_NAME}"
          
          SERVICE_DIR="services/${SERVICE_NAME}"
          
          if [ -d "$SERVICE_DIR" ]; then
            echo "Directory '${SERVICE_DIR}' found. Running tests..."
            cd $SERVICE_DIR
            go test -v ./...
            echo "Tests completed."
          else
            echo "Error: Directory '${SERVICE_DIR}' not found!"
            exit 1
          fi